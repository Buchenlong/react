{"version":3,"sources":["pages/Header.js","pages/Doc.js","App.js","pages/Mytab.js","index.js"],"names":["Header","activeClassName","exact","to","DocContent","props","match","params","type","withRouter","console","log","className","path","component","from","App","React","Component","Doc","ReactDOM","render","document","getElementById","fetch","method","headers","then","res","json"],"mappings":"+MAkBeA,G,OAdA,WACX,OACI,gCACI,6BACI,kBAAC,IAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAG,KAA3C,SACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,QAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,oB,iBCAVC,EAAa,SAACC,GAChB,OAAO,4BACDA,EAAMC,MAAMC,OAAOC,OA+CdC,eA5CH,SAACJ,GAkBT,OAjBAK,QAAQC,IAAIN,GAkBR,yBAAKO,UAAU,OAUX,yBAAKA,UAAU,WAEX,kBAAC,IAAD,CAAOC,KAAK,aAAaC,UAAYV,IACrC,kBAAC,IAAD,CAAUW,KAAK,OAAOZ,GAAG,eAE7B,4BACI,4BAAI,kBAAC,IAAD,CAASA,GAAG,aAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,e,gCCvCLa,GCdKC,IAAMC,UDKd,WACX,OAAO,kBAAC,IAAD,KACN,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEC,kBAAC,IAAD,CAAOL,KAAK,OAAOC,UAAWK,Q,OEPjCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SAM1BC,MADU,4EACC,CACPC,OAAQ,OACRC,QAAS,CACP,eAAgB,sBAGrBC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GAAG,OAAElB,QAAQC,IAAIiB,O","file":"static/js/main.3c5d9530.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useEffect } from 'react'\r\nimport RouteWithSubRoutes from '../App'\r\nimport {\r\n    NavLink, Route, Redirect,\r\n    useHistory,\r\n    useLocation,\r\n    useParams,\r\n    useRouteMatch,\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport './doc.css';\r\nimport {NavBar,Icon} from 'antd-mobile'\r\nconst DocContent = (props) => {\r\n    return <h1>\r\n        { props.match.params.type }\r\n    </h1>\r\n}\r\nconst Doc = (props) => {\r\n    console.log(props)\r\n    // const history = useHistory();\r\n    // const location = useLocation();\r\n    // const par = useParams();\r\n    // const mat = useRouteMatch();\r\n    // console.log(history);\r\n    // console.log(location);\r\n    // console.log(par);\r\n    // console.log(mat);\r\n    // useEffect(()=>{\r\n    //     if(!localStorage.getItem('userinfo')){\r\n    //         props.history.push({\r\n    //             pathname:'/login',\r\n    //             state:props.location\r\n    //         })\r\n    //     }\r\n    // },[])\r\n    return (\r\n        <div className='doc'>\r\n            {/* <NavBar\r\n                mode=\"light\"\r\n                icon={ <Icon type=\"left\" /> }\r\n                onLeftClick={ () => props.history.goBack() }\r\n                rightContent={ [\r\n                    <Icon key=\"0\" type=\"search\" style={ { marginRight: '16px' } } />,\r\n                    <Icon key=\"1\" type=\"ellipsis\" />,\r\n                ] }\r\n            >NavBar</NavBar> */}\r\n            <div className=\"content\">\r\n                {/* 嵌套路由 */ }\r\n                <Route path='/doc/:type' component={ DocContent } />\r\n                <Redirect from='/doc' to='/doc/core' />\r\n            </div>\r\n            <ol>\r\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Doc);","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\nimport Header from './pages/Header';\nimport routes from './router.config';\nimport {Button,TabBar} from 'antd-mobile'\nimport Mytab from './pages/Mytab';\nimport Doc from './pages/Doc';\nconst App = ()=>{\n\treturn <Router>\n\t\t<Header />\n\t\t<Switch>\n\t\t\t{/* <Route exact path='/' component={Home} /> */}\n\t\t\t<Route path='/doc' component={Doc} />\n\t\t</Switch>\n\t</Router>\n}\nexport default App;\n\n// import React from 'react';\n// import {BrowserRouter as Router,Redirect,Route,NavLink,Switch} from 'react-router-dom'\n// import Header from './pages/Header';\n// import Home from './pages/Home';\n// import Doc from './pages/Doc';\n// import Tuto from './pages/Tuto';\n// import Blog from './pages/Blog';\n// import Comm from './pages/Comm';\n// import Login from './pages/Login';\n// import routes from './router.config';\n\nfunction PrivateRoute({ component:Com, ...rest }) {\n\treturn (\n\t  <Route\n\t\t{...rest}\n\t\trender={({ location }) =>\n\t\t   localStorage.getItem('userinfo')\n\t\t   ?<Com {...rest}/> \n\t\t   : (\n\t\t\t<Redirect\n\t\t\t  to={{\n\t\t\t\tpathname: \"/login\",\n\t\t\t\tstate: location \n\t\t\t  }}\n\t\t\t/>\n\t\t  )\n\t\t}\n\t  />\n\t);\n  }\n  function RouteWithSubRoutes(route) {\n    return (\n      <Route\n        path={route.path}\n        render={props => {\n\t\t\tif(route.pri){\n\t\t\t\treturn<PrivateRoute{...route} />\n\t\t\t}\n\t\t\treturn <route.component{...props} routes={route.routes} />\n\t\t}}\n      />\n    );\n  }\n// const Reactt = ()=>{\n// \treturn <Router>\n// \t\t<Header />\n// \t\t<Switch>\n// \t\t\t{\n// \t\t\t\troutes.map((route, index) => (\n// \t\t\t\t\t<PrivateRoute key={index} {...route.pri}/>,\n// \t\t\t\t\t<Route key={index} {...route.pri} />\n// \t\t\t\t))\n// \t\t\t}\n// \t\t</Switch>\n// \t</Router>\n// }\n\nexport {PrivateRoute};","import React from 'react';\r\nimport {Button,TabBar} from 'antd-mobile'\r\nclass Mytab extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\tselectedTab: 'blueTab',\r\n\t  };\r\n\t}\r\n\trender() {\r\n\t  return (\r\n\t\t<div style={{ position: 'fixed', height: '100%', width: '100%', top: 0 }}>\r\n\t\t  <TabBar\r\n\t\t\tunselectedTintColor=\"#949494\"\r\n\t\t\ttintColor=\"#33A3F4\"\r\n\t\t\tbarTintColor=\"white\"\r\n\t\t  >\r\n\t\t\t<TabBar.Item\r\n\t\t\t  title=\"首页\"\r\n\t\t\t  key=\"home\"\r\n\t\t\t  icon={<div style={{\r\n\t\t\t\twidth: '22px',\r\n\t\t\t\theight: '22px',\r\n\t\t\t\tbackground: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t  />\r\n\t\t\t  }\r\n\t\t\t  selectedIcon={<div style={{\r\n\t\t\t\twidth: '22px',\r\n\t\t\t\theight: '22px',\r\n\t\t\t\tbackground: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t  />\r\n\t\t\t  }\r\n\t\t\t  selected={this.state.selectedTab === 'blueTab'}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'blueTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t  data-seed=\"logId\"\r\n\t\t\t>\r\n\t\t\t  首页\r\n\t\t\t</TabBar.Item>\r\n\t\t\t<TabBar.Item\r\n\t\t\t  icon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  selectedIcon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  title=\"Koubei\"\r\n\t\t\t  key=\"Koubei\"\r\n\t\t\t  selected={this.state.selectedTab === 'redTab'}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'redTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t  data-seed=\"logId1\"\r\n\t\t\t>\r\n\t\t\t  \t<Button onClick={()=>{\r\n                    this.props.history.push('/doc')\r\n                }} type='primary'>ToDOC</Button>\r\n\t\t\t</TabBar.Item>\r\n\t\t\t<TabBar.Item\r\n\t\t\t  icon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  selectedIcon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  title=\"Friend\"\r\n\t\t\t  key=\"Friend\"\r\n\t\t\t  selected={this.state.selectedTab === 'greenTab'}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'greenTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  教程\r\n\t\t\t</TabBar.Item>\r\n\t\t\t<TabBar.Item\r\n\t\t\t  icon={{ uri: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg' }}\r\n\t\t\t  selectedIcon={{ uri: 'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg' }}\r\n\t\t\t  title=\"My\"\r\n\t\t\t  key=\"my\"\r\n\t\t\t  selected={this.state.selectedTab === 'yellowTab'}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'yellowTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  社区页\r\n\t\t\t</TabBar.Item>\r\n\t\t  </TabBar>\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n  }\r\nexport default Mytab;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/Home';\nimport App from './App'\nimport 'antd-mobile/dist/antd-mobile.css';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\nlet url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\nfetch(url, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n})\n.then(res=>res.json())\n.then(res=>console.log(res))\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// // import Home from './pages/Home';\n// // import Control from './components/Control';\n// // import Demo01 from './pages/Demo01';\n// // import App from './pages/App';\n// // import Hoc,{Detail} from './pages/Hoc';\n// // import Hook from './pages/Hook'\n// // import Context from './pages/context'\n// import TodoList from './pages/TodoList'\n// import App from './App';\n// // console.log(Context);\n\n// ReactDOM.render(\n//   <TodoList />,\n//   document.getElementById('root')\n// );\n\n\n// 实现带有本地存储的todolist功能（类组件实现）：\n\n// 最外层index.js里render(<TodoList/>,xx)\n// TodoList组件里包含Input和List两个组件\n// 输入框输入时不进行本地存储（使用componentDidUpdate）\n\n// 写完进行npm run build,将打包完的静态传到github，\n// 设置github pages，雪梨提交网页链接和四个文件的代码\n\n\n\n\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n"],"sourceRoot":""}